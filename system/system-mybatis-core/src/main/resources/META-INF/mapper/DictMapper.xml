<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="modules.system.dao.DictDao">
    <sql id="columns">
        o.`CODE`,
        o.IS_DEL AS 'isDel',
        o.REMARKS,
        o.CREATED_TIME,
        o.UPDATED_TIME,
        o.VERSION,
        o.LABEL,
        o.VALUE,
        o.TYPE,
        o.DESCRIPTION,
        o.SORT,
        o.CREATED_BY AS 'creator.code',
        o.UPDATED_BY AS 'editor.code'
    </sql>

    <sql id="joinColumns">
        ,cu.NAME AS 'creator.name',
        uu.NAME AS 'editor.name'
    </sql>

    <sql id="tableName">
        sys_dict
    </sql>

    <sql id="tableAlias">
        <include refid="tableName"/>
        o
    </sql>

    <sql id="joinTables">
        LEFT JOIN sys_user cu ON cu.`CODE` = o.CREATED_BY
        LEFT JOIN sys_user uu ON uu.`CODE` = o.UPDATED_BY
    </sql>

    <sql id="conditions">
        1=1 AND o.IS_DEL = 'n'
        <if test="null != code and '' != code">
            AND o.CODE = #{code}
        </if>
        <if test="null != label and '' != label">
            AND o.LABEL = #{label}
        </if>
        <if test="null != type and '' != type">
            AND o.TYPE = #{type}
        </if>
        <if test="null != value and '' != value">
            AND o.VALUE = #{value}
        </if>
    </sql>

    <select id="findListByType" parameterType="java.lang.String" resultType="modules.system.model.Dict">
        SELECT
        <include refid="columns"/>
        <include refid="joinColumns"/>
        FROM
        <include refid="tableAlias"/>
        <include refid="joinTables"/>
        WHERE o.TYPE = #{type}
        ORDER BY SORT
    </select>

    <select id="findByTypeAndValue" parameterType="java.lang.String" resultType="modules.system.model.Dict">
        SELECT
        <include refid="columns"/>
        <include refid="joinColumns"/>
        FROM
        <include refid="tableAlias"/>
        <include refid="joinTables"/>
        WHERE o.TYPE = #{type} AND o.VALUE = #{value}
        ORDER BY SORT
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(o.CODE)
        FROM
        <include refid="tableAlias"/>
        WHERE
        <include refid="conditions"/>
    </select>

    <select id="findOne" resultType="modules.system.model.Dict">
        SELECT
        <include refid="columns"/>
        <include refid="joinColumns"/>
        FROM
        <include refid="tableAlias"/>
        <include refid="joinTables"/>
        WHERE
        <include refid="conditions"/>
    </select>

    <select id="findAll" resultType="modules.system.model.Dict">
        SELECT
        <include refid="columns"/>
        <include refid="joinColumns"/>
        FROM
        <include refid="tableAlias"/>
        <include refid="joinTables"/>
        WHERE
        <include refid="conditions"/>
        ORDER BY SORT
    </select>

    <select id="findPage" resultType="modules.system.model.Dict">
        SELECT
        <include refid="columns"/>
        <include refid="joinColumns"/>
        FROM
        <include refid="tableAlias"/>
        <include refid="joinTables"/>
        WHERE
        <include refid="conditions"/>
        ORDER BY SORT
        <if test="null != index and null != size and 0 != size">
            LIMIT #{index},#{size}
        </if>
    </select>

    <insert id="insert">
        INSERT INTO
        <include refid="tableName"/>(
        `CODE`,
        IS_DEL,
        REMARKS,
        CREATED_TIME,
        UPDATED_TIME,
        VERSION,
        LABEL,
        `VALUE`,
        `TYPE`,
        DESCRIPTION,
        SORT,
        CREATED_BY,
        UPDATED_BY
        ) VALUES (
        #{code},
        #{isDel},
        #{remarks},
        #{createdTime},
        #{updatedTime},
        #{version},
        #{label},
        #{value},
        #{type},
        #{description},
        #{sort},
        #{creator.code},
        #{editor.code}
        )
    </insert>

    <update id="update">
        UPDATE
        <include refid="tableName"/>
        SET
        IS_DEL = #{isDel},
        REMARKS = #{remarks},
        CREATED_TIME = #{createdTime},
        UPDATED_TIME = #{updatedTime},
        VERSION = #{version},
        LABEL = #{label},
        `VALUE` = #{value},
        `TYPE` = #{type},
        DESCRIPTION = #{description},
        SORT = #{sort},
        CREATED_BY = #{creator.code},
        UPDATED_BY = #{editor.code}
        WHERE CODE = #{code}
    </update>

    <delete id="delete">
        DELETE FROM
        <include refid="tableName"/>
        WHERE CODE = #{code}
    </delete>

    <!-- 批量删除 -->
    <delete id="deleteList" parameterType="java.util.List">
        DELETE FROM
        <include refid="tableName"/>
        WHERE CODE in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.code}
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM
        <include refid="tableName"/>
    </delete>
</mapper>
